//dependencies of this module
@include requires-module-lib;
@include requires-module-base;

//NOTE: The code layout is a bit awkward because we need to define mixins
//before including them. The actual definition for `body > nav#nav` is at the
//very bottom.

@mixin navbar-link-base {
  //base for a highlight border that appears on selected and active nav links
  position: relative;

  &:after {
    content: '';
    display: inline;
    position: absolute;
    background: var(--highlight-color);
    opacity: 0;
    transition: opacity 0.3s;
  }
  &.nav-item-current:after {
    opacity: 1 !important;
  }
  &:active, &:hover, &:focus {
    &:after {
      opacity: 0.25;
    }
  }
}

@mixin navbar-linear-layout {
  // On large screens, the navbar is laid out as a single column, with most
  // items on the left and possibly some items on the right.
  // <nav id="nav"> supplies the card style and spans the entire screen width.
  height: 48px;
  --link-color: black;

  & > #nav-bar {
    // <div id="nav-bar"> constrains the total width to place the
    // right-aligned buttons correctly.
    max-width: var(--content-width);
    padding: 0 var(--horiz-padding);
    @include is-column(0);

    & > #nav-title {
      // <div id="nav-title"> contains the site logo (if any) and is only used
      // by the linear layout.
    }
    & > a#nav-fold, & > a#nav-unfold {
      // <a id="nav-{fold,unfold}"> are only used by the folding layout.
      display: none;
    }

    & > .nav-area {
      // <div class="nav-area"> wraps all navigation items that collapse into
      // a hamburger menu on small screens.
      @include is-column(0);

      &#nav-left {
        margin-right: auto;
      }

      & > * {
        white-space: nowrap;
        padding: calc(24px - 0.5rem) 0.25rem;
        height: 48px;
        line-height: 1rem;
      }

      & > a.nav-item {
        // <a class="nav-item"> is a clickable navigation item.
        @include navbar-link-base;

        &:after {
          left: 0;
          right: 0;
          bottom: 0;
          height: 4px;
        }
      }

      & > .breadcrumb-arrow {
        // <div class="breadcrumb-arrow"> appears between
        // <a class="nav-item"> in a breadcrumb chain. In this layout, it gets
        // all its styles from the `& > *` rule above.
      }
    }
  }
}

@mixin navbar-folding-layout {
  & > #nav-bar {
    @include is-column(0);
    flex-wrap: wrap;

    & > #nav-title {
      display: none; //only used by the linear layout
    }

    & > a#nav-fold, & > a#nav-unfold {
      @include is-column(0);
      min-width: 100%; //put the .nav-area on the next line
      padding: 0 var(--horiz-padding);

      & > span {
        flex: 1;
        white-space: nowrap;
        padding: calc(24px - 0.5rem) 0.25rem;
        line-height: 1rem;
      }
    }

    & > a#nav-fold {
      display: none;
    }

    & > .nav-area {
      display: none; //until unfolded (see below)

      & > .nav-item {
        @include navbar-link-base;
        display: block;
        padding: 0;
        height: var(--click-target);
        line-height: var(--click-target);

        &:after {
          top: 0;
          bottom: 0;
          width: 4px;
        }

        &.nav-item-current {
          --link-color: black;
        }
      }

      & > .breadcrumb-arrow {
        display: none;
      }

      & > .breadcrumb-arrow + .nav-item {
        &:before {
          content: '>';
          display: inline;
          padding: 0 0.25rem 0 0.5rem;
        }
        & + .breadcrumb-arrow + .nav-item {
          &:before { padding-left: 1.0rem; }
          & + .breadcrumb-arrow + .nav-item {
            &:before { padding-left: 1.5rem; }
            & + .breadcrumb-arrow + .nav-item {
              &:before { padding-left: 2.0rem; }
              & + .breadcrumb-arrow + .nav-item {
                &:before { padding-left: 2.5rem; }
              }
            }
          }
        }
      }

      &#nav-left {
        margin-right: auto;

        & > .nav-item {
          padding-left: var(--horiz-padding);

          &:after {
            left: 0;
          }
        }
      }

      &#nav-right {
        & > .nav-item {
          padding-right: var(--horiz-padding);

          &:after {
            right: 0;
          }
        }
      }
    }
  }

  //hide unfold link and show contents when navbar is unfolded
  &:target > #nav-bar {
    & > #nav-unfold {
      display: none;
    }

    & > #nav-fold {
      display: flex;
      padding-bottom: 0.25rem;
      border-bottom: 1px solid #CCC;
      margin-bottom: 0.25rem;
    }

    & > .nav-area {
      display: block;
    }
  }
}

body > nav#nav {
  @include is-card;
  padding: 0;
  //match main-matter padding of 1rem, but take into account the nav-item
  //padding of 0.25rem
  --horiz-padding: 0.75rem;
  --highlight-color: #666;

  @media (min-width: 40.0001rem) {
    @include navbar-linear-layout;
  }
  &.always-linear {
    @include navbar-linear-layout;
  }

  @media (max-width: 40rem) {
    &:not(.always-linear) {
      //This mixin could be inlined here, but I've kept it as a mixin for
      //symmetry's sake.
      @include navbar-folding-layout;
    }
  }
}

